{"version":3,"file":"km-input-lstring.cjs","sources":["../../../src/components/controls/km-input-lstring.vue"],"sourcesContent":["<template>\r\n  <div class=\"scbd-controls km-input-lstring\" >\r\n    <slot></slot>\r\n    <div class=\"input-group mb-1\" v-for=\"locale in locales\" :key=\"locale\" :class=\"`km-input-lstring-${locale}`\">\r\n      <input     v-if=\"rows==1\" type=\"text\"  class=\"form-control\" :placeholder=\"placeholder\" aria-describedby=\"lstring-text\"     v-model=\"model[locale]\" :dir=\"locale == 'ar' ? 'rtl' : 'ltr'\" @input=\"$emit('update:modelValue', model)\"/> \r\n      <textarea  v-if=\"rows>1\"  :rows=rows   class=\"form-control\" :placeholder=\"placeholder\" aria-describedby=\"lstring-textarea\" v-model=\"model[locale]\" :dir=\"locale == 'ar' ? 'rtl' : 'ltr'\" @input=\"$emit('update:modelValue', model)\"/>      \r\n    \r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-primary\" type=\"button\" id=\"basic-addon2\" :data-bs-toggle=\"'tooltip'\" :data-bs-placement=\"'top'\" :title=\"getTerm(locale).title\">\r\n          {{ locale.toUpperCase() }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { watch, onMounted } from \"vue\";\r\n    import { without } from \"lodash\";\r\n\r\n    const model = defineModel({type:Object, required: true, default:{}})\r\n    const props = defineProps({\r\n      locales:  { type: Array, required: true },\r\n      disabled: { type: Boolean, default: false },\r\n      rows:     { type: Number, required: false, default: 1 },\r\n      placeholder: {type: String, required: false }\r\n    });\r\n\r\n    const loadLanguages = () => {\r\n      props.locales?.forEach((e) => {\r\n        //TODO: call thesaurus service API\r\n      });\r\n    };\r\n\r\n    const getTerm = (term) => {\r\n      //TODO: call thesaurus service API\r\n      return { title: term };\r\n    };\r\n\r\n    watch(()=>props.locales,\r\n      (newVal, oldVal) => {\r\n        const deleted = without(Object.keys(model.value), ...newVal);\r\n        if (deleted?.length) {\r\n          deleted.forEach((e) => {\r\n            model.value[e] = undefined;\r\n          });\r\n        }\r\n        loadLanguages();\r\n      }, {deep:true}\r\n    );\r\n\r\n    onMounted(() => {\r\n      loadLanguages();\r\n    });\r\n</script>\r\n"],"names":["_useModel","watch","without","onMounted"],"mappings":";;;;;;;;;;AAmBA;AACA;;;;;;;;;;;;;;AAJc;AACd,IAGI,MAAM,KAAK,GAAGA,YAAW,CAAA,OAAA,EAAA,YAA0C,EAAC;AACxE,IAAI,MAAM,KAAK,GAAG,OAKZ,CAAC;AACP;AACA,IAAI,MAAM,aAAa,GAAG,MAAM;AAChC,MAAM,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,KAAK;AACpC;AACA,OAAO,CAAC,CAAC;AACT,KAAK,CAAC;AACN;AACA,IAAI,MAAM,OAAO,GAAG,CAAC,IAAI,KAAK;AAC9B;AACA,MAAM,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;AAC7B,KAAK,CAAC;AACN;AACA,IAAIC,SAAK,CAAC,IAAI,KAAK,CAAC,OAAO;AAC3B,MAAM,CAAC,MAAM,EAAE,MAAM,KAAK;AAC1B,QAAQ,MAAM,OAAO,GAAGC,cAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;AACrE,QAAQ,IAAI,OAAO,EAAE,MAAM,EAAE;AAC7B,UAAU,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AACjC,YAAY,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AACvC,WAAW,CAAC,CAAC;AACb,SAAS;AACT,QAAQ,aAAa,EAAE,CAAC;AACxB,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AACpB,KAAK,CAAC;AACN;AACA,IAAIC,aAAS,CAAC,MAAM;AACpB,MAAM,aAAa,EAAE,CAAC;AACtB,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}