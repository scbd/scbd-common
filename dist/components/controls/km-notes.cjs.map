{"version":3,"file":"km-notes.cjs","sources":["../../../src/services/composables/useAuth.js","../../../src/services/filters/datetime.js","../../../src/components/controls/km-notes.vue"],"sourcesContent":["\r\nimport { inject, computed } from \"vue\"\r\n\r\nconst defaultInjectKey = 'auth';\r\n\r\nexport function useAuth (key = defaultInjectKey) {\r\n    return inject(key);\r\n}\r\n  \r\nexport function useUser (key = defaultInjectKey) {\r\n    const auth = useAuth(key);\r\n  \r\n    return computed(() => {\r\n      return auth.user();\r\n    });\r\n}","import { DateTime } from 'luxon'\r\n\r\nexport function timezone(dateTime, tz=null) {\r\n    dateTime = dateTime && asDateTime(dateTime);\r\n\r\n    if(dateTime) dateTime = dateTime.setZone(tz||'local');\r\n\r\n    return dateTime;\r\n}\r\n\r\n//https://moment.github.io/luxon/docs/manual/formatting#table-of-tokens\r\n\r\nexport function format(dateTime, format='T') {\r\n    return dateTime && asDateTime(dateTime).toFormat(format)\r\n}\r\n\r\nexport function asDateTime(date) {\r\n    if(date instanceof DateTime)  return date\r\n    if(date instanceof Date)      return DateTime.fromJSDate(date)\r\n    if(typeof(date) === 'string') return DateTime.fromISO(date)\r\n\r\n    throw Error('Unknown date/time format');\r\n}","<template>\r\n    <div>\r\n        <textarea   class=\"form-control\"         \r\n            v-model=\"newNote\"           \r\n            :id=\"$attrs.id\"\r\n            :class=\"$attrs.class\"\r\n            :required=\"$attrs.required\" \r\n            :placeholder=\"$attrs.placeholder\"\r\n            :disabled=\"$attrs.disabled\"\r\n            :rows=\"rows\" \r\n            :cols=\"$attrs.cols\" \r\n            @change=\"save\" >\r\n        </textarea>       \r\n   \r\n        <table class=\"table table-striped\" v-if=\"notes?.length\">\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in notes\" :key=\"index\">\r\n                    <td>{{item}}  </td>   \r\n                    <td ><span class=\"btn float-end\" @click=\"remove(index)\"><i class=\"fa fa-trash-o icon\"></i></span></td>\r\n                </tr>    \r\n            </tbody>    \r\n        </table>   \r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n    import { ref, computed } from 'vue'\r\n    import {useUser} from '../../services/composables/useAuth'\r\n    import {format} from '../../services/filters/datetime'\r\n\r\n    const model = defineModel({type:String, required:true});\r\n\r\n    const props = defineProps({\r\n        rows:{\r\n            type:Number,\r\n            default:4    \r\n        }\r\n    });\r\n  \r\n    // using for prevent edit history list\r\n    let lastNote = '';\r\n    const newNote = ref(\"\");\r\n    \r\n    // user info will be used for generate new note\r\n    const user = useUser();\r\n \r\n   // only get history lists\r\n   let notes = computed(()=>{\r\n        if(model.value)\r\n            return  (JSON.parse(model.value)).filter(e=>e!=lastNote);\r\n        return [];\r\n   }); \r\n   \r\n    // delete history note\r\n    const remove=(index)=>{   \r\n        notes.value.splice(index, 1);\r\n        save();  \r\n    };\r\n\r\n    // save whole note list (history notes list + new note)\r\n    const save=()=>{  \r\n        // prevent edit history notes list\r\n        const lNotes = notes.value; \r\n        if(lNotes.at(-1) == lastNote)\r\n             lNotes.pop();\r\n   \r\n        // generate new note\r\n        const timestamp = format(new Date(), \"FF\");  \r\n        var newLNote = newNote.value ? `[ ${user.value.name} | ${timestamp} ] - ${newNote.value.trim()}` : \"\";\r\n        lastNote =newLNote; \r\n       \r\n        // sending history notes + new note to parent page\r\n        model.value = JSON.stringify([...lNotes, newLNote]);\r\n    };\r\n</script>"],"names":["inject","computed","DateTime","_useModel","ref"],"mappings":";;;;;AAGA,MAAM,gBAAgB,GAAG,MAAM,CAAC;AAChC;AACO,SAAS,OAAO,EAAE,GAAG,GAAG,gBAAgB,EAAE;AACjD,IAAI,OAAOA,UAAM,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AACD;AACO,SAAS,OAAO,EAAE,GAAG,GAAG,gBAAgB,EAAE;AACjD,IAAI,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC9B;AACA,IAAI,OAAOC,YAAQ,CAAC,MAAM;AAC1B,MAAM,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;AACzB,KAAK,CAAC,CAAC;AACP;;ACLA;AACA;AACO,SAAS,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,GAAG,EAAE;AAC7C,IAAI,OAAO,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC5D,CAAC;AACD;AACO,SAAS,UAAU,CAAC,IAAI,EAAE;AACjC,IAAI,GAAG,IAAI,YAAYC,cAAQ,GAAG,OAAO,IAAI;AAC7C,IAAI,GAAG,IAAI,YAAY,IAAI,OAAO,OAAOA,cAAQ,CAAC,UAAU,CAAC,IAAI,CAAC;AAClE,IAAI,GAAG,OAAO,IAAI,CAAC,KAAK,QAAQ,EAAE,OAAOA,cAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;AAC/D;AACA,IAAI,MAAM,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAC5C;;;;;;;;;;;;ACOA;AACA;;;;;;;;;;;;;;AALc;AACd,IAII,MAAM,KAAK,GAAGC,YAAW,CAAA,OAAA,EAAA,YAA6B,CAAC,CAAC;AAQ5D;AACA;AACA,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB,IAAI,MAAM,OAAO,GAAGC,OAAG,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA;AACA,IAAI,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;AAC3B;AACA;AACA,GAAG,IAAI,KAAK,GAAGH,YAAQ,CAAC,IAAI;AAC5B,QAAQ,GAAG,KAAK,CAAC,KAAK;AACtB,YAAY,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACrE,QAAQ,OAAO,EAAE,CAAC;AAClB,IAAI,CAAC,CAAC;AACN;AACA;AACA,IAAI,MAAM,MAAM,CAAC,CAAC,KAAK,GAAG;AAC1B,QAAQ,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,EAAE,CAAC;AACf,KAAK,CAAC;AACN;AACA;AACA,IAAI,MAAM,IAAI,CAAC,IAAI;AACnB;AACA,QAAQ,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;AACnC,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ;AACpC,aAAa,MAAM,CAAC,GAAG,EAAE,CAAC;AAC1B;AACA;AACA,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;AACnD,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAC9G,QAAQ,QAAQ,EAAE,QAAQ,CAAC;AAC3B;AACA;AACA,QAAQ,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC5D,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}