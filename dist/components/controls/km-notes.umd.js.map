{"version":3,"file":"km-notes.umd.js","sources":["../../../src/services/composables/useAuth.js","../../../src/services/filters/datetime.js","../../../src/components/controls/km-notes.vue"],"sourcesContent":["\r\nimport { inject, computed } from \"vue\"\r\n\r\nconst defaultInjectKey = 'auth';\r\n\r\nexport function useAuth (key = defaultInjectKey) {\r\n    return inject(key);\r\n}\r\n  \r\nexport function useUser (key = defaultInjectKey) {\r\n    const auth = useAuth(key);\r\n  \r\n    return computed(() => {\r\n      return auth.user();\r\n    });\r\n}","import { DateTime } from 'luxon'\r\n\r\nexport function timezone(dateTime, tz=null) {\r\n    dateTime = dateTime && asDateTime(dateTime);\r\n\r\n    if(dateTime) dateTime = dateTime.setZone(tz||'local');\r\n\r\n    return dateTime;\r\n}\r\n\r\n//https://moment.github.io/luxon/docs/manual/formatting#table-of-tokens\r\n\r\nexport function format(dateTime, format='T') {\r\n    return dateTime && asDateTime(dateTime).toFormat(format)\r\n}\r\n\r\nexport function asDateTime(date) {\r\n    if(date instanceof DateTime)  return date\r\n    if(date instanceof Date)      return DateTime.fromJSDate(date)\r\n    if(typeof(date) === 'string') return DateTime.fromISO(date)\r\n\r\n    throw Error('Unknown date/time format');\r\n}","<template>\r\n    <div>\r\n        <textarea   class=\"form-control\"         \r\n            v-model=\"newNote\"           \r\n            :id=\"$attrs.id\"\r\n            :class=\"$attrs.class\"\r\n            :required=\"$attrs.required\" \r\n            :placeholder=\"$attrs.placeholder\"\r\n            :disabled=\"$attrs.disabled\"\r\n            :rows=\"rows\" \r\n            :cols=\"$attrs.cols\" \r\n            @change=\"save\" >\r\n        </textarea>       \r\n   \r\n        <table class=\"table table-striped\" v-if=\"notes?.length\">\r\n            <tbody>\r\n                <tr v-for=\"(item, index) in notes\" :key=\"index\">\r\n                    <td>{{item}}  </td>   \r\n                    <td ><span class=\"btn float-end\" @click=\"remove(index)\"><i class=\"fa fa-trash-o icon\"></i></span></td>\r\n                </tr>    \r\n            </tbody>    \r\n        </table>   \r\n    </div> \r\n</template>\r\n\r\n<script setup>\r\n    import { ref, computed } from 'vue'\r\n    import {useUser} from '../../services/composables/useAuth'\r\n    import {format} from '../../services/filters/datetime'\r\n\r\n    const model = defineModel({type:String, required:true});\r\n\r\n    const props = defineProps({\r\n        rows:{\r\n            type:Number,\r\n            default:4    \r\n        }\r\n    });\r\n  \r\n    // using for prevent edit history list\r\n    let lastNote = '';\r\n    const newNote = ref(\"\");\r\n    \r\n    // user info will be used for generate new note\r\n    const user = useUser();\r\n \r\n   // only get history lists\r\n   let notes = computed(()=>{\r\n        if(model.value)\r\n            return  (JSON.parse(model.value)).filter(e=>e!=lastNote);\r\n        return [];\r\n   }); \r\n   \r\n    // delete history note\r\n    const remove=(index)=>{   \r\n        notes.value.splice(index, 1);\r\n        save();  \r\n    };\r\n\r\n    // save whole note list (history notes list + new note)\r\n    const save=()=>{  \r\n        // prevent edit history notes list\r\n        const lNotes = notes.value; \r\n        if(lNotes.at(-1) == lastNote)\r\n             lNotes.pop();\r\n   \r\n        // generate new note\r\n        const timestamp = format(new Date(), \"FF\");  \r\n        var newLNote = newNote.value ? `[ ${user.value.name} | ${timestamp} ] - ${newNote.value.trim()}` : \"\";\r\n        lastNote =newLNote; \r\n       \r\n        // sending history notes + new note to parent page\r\n        model.value = JSON.stringify([...lNotes, newLNote]);\r\n    };\r\n</script>"],"names":["defaultInjectKey","useAuth","key","arguments","length","undefined","inject","useUser","auth","computed","user","format","dateTime","asDateTime","toFormat","date","DateTime","Date","fromJSDate","fromISO","Error","model","_useModel","__props","lastNote","newNote","ref","notes","value","JSON","parse","filter","e","remove","index","splice","save","lNotes","at","pop","timestamp","newLNote","concat","name","trim","stringify"],"mappings":"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"}