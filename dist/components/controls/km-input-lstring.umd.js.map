{"version":3,"file":"km-input-lstring.umd.js","sources":["../../../src/components/controls/km-input-lstring.vue"],"sourcesContent":["<template>\r\n  <div class=\"scbd-controls km-input-lstring\" >\r\n    <slot></slot>\r\n    <div class=\"input-group mb-1\" v-for=\"locale in locales\" :key=\"locale\" :class=\"`km-input-lstring-${locale}`\">\r\n      <input     v-if=\"rows==1\" type=\"text\"  class=\"form-control\" :placeholder=\"placeholder\" aria-describedby=\"lstring-text\"     v-model=\"model[locale]\" :dir=\"locale == 'ar' ? 'rtl' : 'ltr'\" @input=\"$emit('update:modelValue', model)\"/> \r\n      <textarea  v-if=\"rows>1\"  :rows=rows   class=\"form-control\" :placeholder=\"placeholder\" aria-describedby=\"lstring-textarea\" v-model=\"model[locale]\" :dir=\"locale == 'ar' ? 'rtl' : 'ltr'\" @input=\"$emit('update:modelValue', model)\"/>      \r\n    \r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-primary\" type=\"button\" id=\"basic-addon2\" :data-bs-toggle=\"'tooltip'\" :data-bs-placement=\"'top'\" :title=\"getTerm(locale).title\">\r\n          {{ locale.toUpperCase() }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { watch, onMounted } from \"vue\";\r\n    import { without } from \"lodash\";\r\n\r\n    const model = defineModel({type:Object, required: true, default:{}})\r\n    const props = defineProps({\r\n      locales:  { type: Array, required: true },\r\n      disabled: { type: Boolean, default: false },\r\n      rows:     { type: Number, required: false, default: 1 },\r\n      placeholder: {type: String, required: false }\r\n    });\r\n\r\n    const loadLanguages = () => {\r\n      props.locales?.forEach((e) => {\r\n        //TODO: call thesaurus service API\r\n      });\r\n    };\r\n\r\n    const getTerm = (term) => {\r\n      //TODO: call thesaurus service API\r\n      return { title: term };\r\n    };\r\n\r\n    watch(()=>props.locales,\r\n      (newVal, oldVal) => {\r\n        const deleted = without(Object.keys(model.value), ...newVal);\r\n        if (deleted?.length) {\r\n          deleted.forEach((e) => {\r\n            model.value[e] = undefined;\r\n          });\r\n        }\r\n        loadLanguages();\r\n      }, {deep:true}\r\n    );\r\n\r\n    onMounted(() => {\r\n      loadLanguages();\r\n    });\r\n</script>\r\n"],"names":["model","_useModel","__props","props","loadLanguages","_props$locales","locales","forEach","e","getTerm","term","title","watch","newVal","oldVal","deleted","without","Object","keys","value","length","undefined","deep","onMounted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoBI,MAAMA,KAAK,GAAGC,GAAAA,CAAAA,QAAW,CAAAC,OAAA,EAAA,YAA0C,CAAC;MACpE,MAAMC,KAAK,GAAGD,OAKZ;MAEF,MAAME,aAAa,GAAGA,CAAA,KAAM;QAAA,IAAAC,cAAA;QAC1B,CAAAA,cAAA,GAAAF,KAAK,CAACG,OAAO,cAAAD,cAAA,eAAbA,cAAA,CAAeE,OAAO,CAAEC,CAAC,IAAK;UACpC;QAAA,CACO,CAAC;MACR,CAAK;MAED,MAAMC,OAAO,GAAIC,IAAI,IAAK;QAC9B;QACM,OAAO;UAAEC,KAAK,EAAED;SAAM;MAC5B,CAAK;MAEDE,GAAK,CAAAA,KAAA,CAAC,MAAIT,KAAK,CAACG,OAAO,EACrB,CAACO,MAAM,EAAEC,MAAM,KAAK;QAClB,MAAMC,OAAO,GAAGC,MAAO,CAAAA,OAAA,CAACC,MAAM,CAACC,IAAI,CAAClB,KAAK,CAACmB,KAAK,CAAC,EAAE,GAAGN,MAAM,CAAC;QAC5D,IAAIE,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEK,MAAM,EAAE;UACnBL,OAAO,CAACR,OAAO,CAAEC,CAAC,IAAK;YACrBR,KAAK,CAACmB,KAAK,CAACX,CAAC,CAAC,GAAGa,SAAS;UACtC,CAAW,CAAC;QACH;QACDjB,aAAa,EAAE;MACvB,CAAO,EAAE;QAACkB,IAAI,EAAC;MAAI,CACnB,CAAK;MAEDC,GAAAA,CAAAA,SAAS,CAAC,MAAM;QACdnB,aAAa,EAAE;MACrB,CAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}