{"version":3,"file":"km-storage.umd.js","sources":["../../../src/services/api/api-base.js","../../../src/services/api/km-storage.js"],"sourcesContent":["import axios from 'axios'\r\nimport { isFunction } from 'lodash'\r\nimport * as Vue from 'vue'\r\n\r\nlet sitePrefixUrl = 'https://api.cbd.int';\r\n\r\nif(/\\.cbd\\.int$/i   .test(window?.location?.hostname || '')) sitePrefixUrl= 'https://api.cbd.int';\r\nif(/\\.cbddev\\.xyz$/i.test(window?.location?.hostname || '')) sitePrefixUrl= 'https://api.cbddev.xyz';\r\nif(/\\localhost$/i   .test(window?.location?.hostname || '')) sitePrefixUrl= '/';\r\n\r\nconst defaultOptions = { \r\n   prefixUrl:  sitePrefixUrl, \r\n   timeout  : 30 * 1000,\r\n   token: Vue?.prototype?.$auth?.strategy?.token?.get()  \r\n}\r\n\r\nexport default class ApiBase\r\n{\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    if(isFunction(options)) options = { token : options }\r\n\r\n    const { token, prefixUrl, timeout, tokenType } = { ...defaultOptions, ...options }\r\n\r\n    this.config = {\r\n      baseURL : prefixUrl,\r\n      timeout,\r\n      tokenType,\r\n      token,\r\n    }\r\n\r\n    const http = async function (...args) {   \r\n      return (await loadAsyncHeaders(this.config))(...args);\r\n    }\r\n\r\n    http.get     = async (...args)=> (await loadAsyncHeaders(this.config)).get    (...args);\r\n    http.head    = async (...args)=> (await loadAsyncHeaders(this.config)).head   (...args);\r\n    http.post    = async (...args)=> (await loadAsyncHeaders(this.config)).post   (...args);\r\n    http.put     = async (...args)=> (await loadAsyncHeaders(this.config)).put    (...args);\r\n    http.patch   = async (...args)=> (await loadAsyncHeaders(this.config)).patch  (...args);\r\n    http.delete  = async (...args)=> (await loadAsyncHeaders(this.config)).delete (...args);\r\n    http.options = async (...args)=> (await loadAsyncHeaders(this.config)).options(...args);\r\n    http.request = async (...args)=> (await loadAsyncHeaders(this.config)).request(...args);\r\n\r\n    this.http = http;\r\n  }\r\n}\r\n\r\nasync function loadAsyncHeaders(baseConfig) {\r\n\r\n  const { token, tokenType, ...config } = baseConfig || {}\r\n\r\n  const headers = { ...(config.headers || {}) };\r\n\r\n  if(token) {\r\n      headers.Authorization = `${tokenType||'Bearer'} ${token}`;\r\n  }\r\n\r\n  return axios.create({ ...config, headers } );\r\n\r\n}\r\n\r\n//////////////////////////\r\n// Helpers\r\n////////////////////////\r\n\r\nexport function tryCastToApiError(error) {\r\n\r\n  if(error && error.response && error.response.data && error.response.data.code) {\r\n      const apiError = error.response.data\r\n      throw error.response.data;\r\n  }\r\n\r\n  throw error\r\n}\r\n\r\nexport function stringifyUrlParam(value) {\r\n  if (value instanceof(Date))   {return value.toISOString()}    \r\n  if (value instanceof(Object)) {return JSON.stringify(value)}  \r\n  return value; \r\n}\r\n\r\nexport function stringifyUrlParams(valueObj) {\r\n  const returnObj = {};\r\n\r\n  for (const [key, value] of Object.entries(valueObj)) {\r\n    if (isValid(value)){\r\n      returnObj[key] = stringifyUrlParam(value);\r\n    }\r\n  }\r\n  \r\n  return returnObj;\r\n}\r\n\r\nexport function mapObjectId(id){  \r\n  return isObjectId(id)? { $oid: id } : id\r\n}\r\n\r\nexport function isObjectId(id){\r\n  return /^[a-f0-9]{24}/i.test(id);\r\n}\r\n\r\nexport function isValid(params){\r\n  return ![undefined, null].includes(params);\r\n}","\r\nimport ApiBase, { tryCastToApiError, isValid, stringifyUrlParams } from './api-base';\r\n\r\nconst  serviceUrls = { \r\n  documentQueryUrl      (){ return \"/api/v2013/documents/\" },\r\n  documentUrl           (identifier){ return `/api/v2013/documents/${encodeURIComponent(identifier)}` },\r\n  validateUrl           (){ return \"/api/v2013/documents/x/validate\" },\r\n  draftUrl              (identifier){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft` },\r\n  attachmentUrl         (identifier, filename) { return `/api/v2013/documents/${encodeURIComponent(identifier)}/attachments/${encodeURIComponent(filename)}` },\r\n  temporaryAttachmentUrl(                    ) { return `/api/v2015/temporary-files` },\r\n  persistAttachmentUrl  (identifier, guid    ) { return `/api/v2013/documents/${encodeURIComponent(identifier)}/attachments/persist-temporary/${encodeURIComponent(guid)}` },\r\n  securityUrl           (identifier, operation){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/securities/${encodeURIComponent(operation)}` },\r\n  draftSecurityUrl      (identifier, operation){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/securities/${encodeURIComponent(operation)}` },\r\n  draftLockUrl          (identifier, lockID)   { return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/locks/${encodeURIComponent(lockID)}` },\r\n  draftLockListUrl      (identifier)           { return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/locks` },\r\n  documentVersionUrl    (identifier)           { return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions` },\r\n}\r\n\r\nexport default class KmStorageApi extends ApiBase\r\n{\r\n  constructor({ realm, ...options }) {\r\n    super(options);\r\n    this.documents    = new KmDocumentsApi(options);\r\n    this.drafts       = new KmDraftsApi(options);\r\n    this.locks        = new KmLocksApi(options);\r\n    this.attachments  = new KmAttachmentsApi(options);\r\n  }\r\n}\r\n\r\nclass KmDocumentsApi extends ApiBase\r\n{\r\n  #realm;\r\n\r\n  constructor({ realm, ...options}) {\r\n\r\n    this.#realm = realm;\r\n\r\n    super(options);\r\n    this.self = this;\r\n  }\r\n\r\n  async query( {realm, q, s, l, sk }={}){\r\n\r\n    const params = stringifyUrlParams( { \r\n      $filter:q, \r\n      $orderby:s,\r\n      $skip:sk, \r\n      $top:l,\r\n      collection : \"my\"\r\n    });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n    \r\n    return this.http.get(serviceUrls.documentQueryUrl(), { headers, params } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async get(identifier, { realm=null}  ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n        \r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.documentUrl(identifier) ,{ headers } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async exists( identifier, realm=null ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.head(serviceUrls.documentUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n \r\n //TODO: confirm interface\r\n async put( identifier, body, realm=null){\r\n  if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n  if(!isValid(body)) throw Error(`invalid value for body`);  \r\n\r\n  //const params = stringifyUrlParams( {schema}); \r\n\r\n  const Realm = realm ? { Realm : realm } : {};  \r\n  const ContentType = { 'Content-Type': 'application/json', };\r\n  const headers =  { ...Realm , ...ContentType}\r\n  \r\n  return this.http.put(serviceUrls.draftUrl(identifier), body , { headers })\r\n                  .then(res => res.data)\r\n                  .catch(tryCastToApiError);\r\n}\r\n\r\n\r\n  async delete(identifier, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.delete(serviceUrls.documentUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n \r\n  async validate(body, {realm, schema, metadata }={}){\r\n    if(!isValid(body)) throw Error(`invalid value for body`);  \r\n\r\n    const params = stringifyUrlParams( { schema, metadata });\r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n   \r\n    return this.http.put(serviceUrls.validateUrl(), body, { headers, params } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n   async canCreate(identifier, {realm=null, schema, metadata}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(schema)) throw Error(`invalid value for schema`);  \r\n\r\n    const params = stringifyUrlParams({ schema, metadata });\r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'create'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n  async canUpdate(identifier,  {realm=null, metadata }={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const params = stringifyUrlParams( {metadata });\r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'update'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n \r\n \r\n  async canDelete(identifier, realm=null ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n    \r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n   \r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'delete'), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n\r\nclass KmDraftsApi extends ApiBase\r\n{\r\n  constructor(options) {\r\n\r\n    super(options);\r\n    this.self = this;\r\n    this.config.headers = {\r\n      Realm:   DefaultValues.Realm,\r\n      Accept : DefaultValues.Accept,\r\n    }\r\n  }\r\n\r\n   async query({realm=null, q, s, l, sk }={}){  \r\n    const params = stringifyUrlParams( {    \r\n      $filter:q, \r\n      $orderby:s,\r\n      $top:l,\r\n      $skip:sk, \r\n      collection : \"mydraft\"  \r\n    });\r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    const data =  this.http.get(serviceUrls.documentQueryUrl(), { headers, params} )\r\n                           .then(res => res.data)\r\n                           .catch(tryCastToApiError);\r\n     \r\n    if(data?.Items?.length){\r\n      data.Items = data.Items.map(e=>{\r\n            if(e.workingDocumentBody){\r\n                e.body = e.workingDocumentBody;\r\n            }\r\n            return e;\r\n      });\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async get(identifier,realm=null  ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    \r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    const data =  this.http.get(serviceUrls.draftUrl(identifier), { headers })\r\n                           .then(res => res.data)\r\n                           .catch(tryCastToApiError);\r\n    \r\n    if(data.workingDocumentBody){\r\n        data.body = data.workingDocumentBody;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n\r\n  async exists( identifier, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n     return this.http.head(serviceUrls.draftUrl(identifier), { headers })\r\n                     .then(res => res.data)\r\n                     .catch(tryCastToApiError);\r\n  }\r\n\r\n  //TODO: confirm interface\r\n  async put( identifier, body, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(body)) throw Error(`invalid value for body`);  \r\n\r\n    //const params = stringifyUrlParams( {schema}); \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const ContentType = { \"Content-Type\" : \"application/json\" };\r\n    const headers =  { ...Realm , ...ContentType}\r\n\r\n    return this.http.put(serviceUrls.draftUrl(identifier),  body , { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n  async delete(identifier, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.delete(serviceUrls.draftUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n  \r\n  async canCreate(identifier, {realm, schema, metadata }={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n\r\n    const params = stringifyUrlParams( {schema, metadata }); \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'create'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async canUpdate(identifier, {realm, metadata}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    const params = stringifyUrlParams( {metadata}); \r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'update'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n  async canDelete(identifier, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'delete'), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n\r\nclass KmLocksApi extends ApiBase\r\n{\r\n  constructor(options) {\r\n    super(options);\r\n    this.config.headers = {\r\n      Realm:   DefaultValues.Realm,\r\n      Accept : DefaultValues.Accept,\r\n    }\r\n  }\r\n\r\n  async query(identifier, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n \r\n    return this.http.get(serviceUrls.draftLockListUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n   async get(identifier, lockID, realm=null ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.get(serviceUrls.draftLockUrl(identifier, lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async exists(identifier,lockID, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.head(serviceUrls.draftLockUrl(identifier, lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  \r\n \r\n  async put(identifier,lockID, body, realm=null){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n   \r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n    \r\n    return this.http.put(serviceUrls.draftLockUrl(identifier,lockID), body, { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n \r\n  async delete(identifier,lockID, realm=null ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const Realm = realm ? { Realm : realm } : {};  \r\n    const headers =  { ...Realm }\r\n\r\n    return this.http.delete(serviceUrls.draftLockUrl(identifier,lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n\r\nclass KmAttachmentsApi extends ApiBase\r\n{\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n\r\n  async uploadTempFile(identifier, file, fileName, options)  {\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(file))       throw Error(`invalid value for file`);  \r\n    if(!isValid(fileName))   throw Error(`invalid value for fileName`);  \r\n    if(!isValid(options))    throw Error(`invalid value for options`);  \r\n    \r\n    \r\n    const { timeout, onUploadProgress, onDownloadProgress }= { ...(options||{}) };\r\n\r\n    const apiConfig = {\r\n      headers: {},\r\n      timeout: timeout || 60 * 60 * 1000,\r\n      onUploadProgress, \r\n      onDownloadProgress\r\n    };\r\n    \r\n    const tempSlotBody = {\r\n        filename    : fileName,\r\n    }\r\n\r\n    //find the content type and validate with whitelist\r\n    if(file instanceof FormData){\r\n        const tempFile = formData.get('file')\r\n        if(tempFile){\r\n            tempSlotBody.contentType = this.getMimeType(file);\r\n        }\r\n    }\r\n    else if(file instanceof File){\r\n        tempSlotBody.contentType = this.getMimeType(file)\r\n    }\r\n    else{\r\n        throw new Error('Unable to read file information.')\r\n    }\r\n    \r\n    if (this.mimeTypeWhitelist().indexOf(tempSlotBody.contentType) < 0) {\r\n        throw new Error(\"File type not supported: \" + mimeType + \"(\" + file.name + \")\");\r\n    }\r\n\r\n    //const key = S4();\r\n    // get a temporary slot from S3 to upload the file\r\n    const temporarySlot = this.http.put(serviceUrls.temporaryAttachmentUrl(),  tempSlotBody  )\r\n                                   .then(res => res.data)\r\n                                   .catch(tryCastToApiError);\r\n    \r\n    // upload the file to the temporary slot on S3    \r\n    apiConfig.headers['Content-Type' ] = temporarySlot.contentType;\r\n    //apiConfig.headers['Authorization'] = undefined;\r\n    const temporaryAttachment =  this.http.put(temporarySlot.url, file,  {  ...apiConfig} )\r\n                                         .then(res => res.data)\r\n                                         .catch(tryCastToApiError);\r\n\r\n    //persists the file using the KM persists attachments endpoint\r\n    const persistedAttachment =  this.http.post(serviceUrls.persistAttachmentUrl(identifier, temporarySlot.uid), fileName,  { params } )\r\n                                          .then(res => res.data)\r\n                                          .catch(tryCastToApiError);\r\n    \r\n    const config = useRuntimeConfig();\r\n    return {\r\n        ...persistedAttachment,\r\n        url     : config.public.API_URL+persistedAttachment.url        \r\n    };\r\n  }\r\n\r\n  async upload(identifier, file,  {contentType, headers  }={}) {\r\n        if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n        if(!isValid(file)) throw Error(`invalid value for file`);  \r\n\r\n        params = {contentType, identifier, filename } || {};\r\n        params.identifier = identifier;\r\n        params.filename = file.name;\r\n\r\n        var contentType = params.contentType || this.getMimeType(file);\r\n\r\n        // params.contentType = undefined;\r\n        params.headers = params.header || {};\r\n        params.headers[\"Content-Type\"] = contentType;\r\n\r\n        ////TEMP////////////////\r\n            //upload to temp url\r\n            const data = this.http.put(serviceUrls.attachmentUrl(identifier, file.name), body=file,  { params } )\r\n                                  .then(res => res.data)\r\n                                  .catch(tryCastToApiError);\r\n            \r\n            const config = useRuntimeConfig()\r\n            data.url = config.public.API_URL+data.url;\r\n            data.urls = {//required by ckeditor\r\n                \"default\": data.url \r\n            };\r\n            \r\n            return data;\r\n        ///////TEMP////////////////\r\n\r\n      //TODO : use s3\r\n      //1 request for temp file from s3\r\n      //upload file \r\n      //return s3 location\r\n      //persist temp file location in api\r\n  }\r\n  getMimeType(file) {\r\n    if(!isValid(file)) throw Error(`invalid value for file`);  \r\n\r\n    const filename = file.name\r\n    const sMimeType = file.type || \"application/octet-stream\";     \r\n\r\n    if (filename && sMimeType == \"application/octet-stream\") {\r\n        var sExt = \"\";\r\n        var iIndex = filename.lastIndexOf(\".\");\r\n\r\n        if (iIndex >= 0)\r\n            sExt = filename.substring(iIndex).toLowerCase();\r\n\r\n        if (sExt == \".json\") sMimeType = \"application/json\";\r\n        if (sExt == \".geojson\") sMimeType = \"application/json\";\r\n        if (sExt == \".xml\") sMimeType = \"application/xml\";\r\n    }\r\n\r\n    return sMimeType;\r\n  }\r\n\r\n  mimeTypeWhitelist(){\r\n    return [\r\n      \"application/json\",\"application/ogg\",\"application/pdf\",\"application/xml\",\"application/zip\",\r\n      \"application/x-zip\",\"application/x-zip-compressed\",\"audio/mpeg\",\"audio/x-ms-wma\",\"audio/x-wav\",\r\n      \"image/gif\",\"image/jpeg\", \"image/png\",\"image/bmp\",\r\n      \"image/tiff\",\r\n      \"text/csv\",\"text/html\",\"text/plain\",\"text/xml\",\"video/mpeg\",\"video/mp4\",\"video/quicktime\",\r\n      \"video/x-ms-wmv\",\"video/x-msvideo\",\"video/x-flv\",\"application/vnd.oasis.opendocument.text\",\r\n      \"application/vnd.oasis.opendocument.spreadsheet\",\"application/vnd.oasis.opendocument.presentation\",\"application/vnd.oasis.opendocument.graphics\",\r\n      \"application/vnd.ms-excel\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.ms-powerpoint\",\"application/msword\",\r\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n    ]\r\n  }\r\n}"],"names":["sitePrefixUrl","test","_window","window","location","hostname","_window2","_window3","defaultOptions","prefixUrl","timeout","token","Vue","_Vue__namespace$proto","prototype","$auth","strategy","get","ApiBase","constructor","options","_this","isFunction","tokenType","config","baseURL","http","loadAsyncHeaders","arguments","head","post","put","patch","delete","request","baseConfig","headers","Authorization","concat","axios","create","tryCastToApiError","error","response","data","code","stringifyUrlParam","value","Date","toISOString","Object","JSON","stringify","stringifyUrlParams","valueObj","returnObj","key","entries","isValid","params","undefined","includes","serviceUrls","documentQueryUrl","documentUrl","identifier","encodeURIComponent","validateUrl","draftUrl","attachmentUrl","filename","temporaryAttachmentUrl","persistAttachmentUrl","guid","securityUrl","operation","draftSecurityUrl","draftLockUrl","lockID","draftLockListUrl","documentVersionUrl","KmStorageApi","_ref","realm","documents","KmDocumentsApi","drafts","KmDraftsApi","locks","KmLocksApi","attachments","KmAttachmentsApi","_realm","WeakMap","_ref2","_classPrivateFieldSet","_classPrivateFieldInitSpec","self","query","q","s","l","sk","length","$filter","$orderby","$skip","$top","collection","Realm","_classPrivateFieldGet","then","res","catch","_ref3","Error","exists","body","ContentType","validate","schema","metadata","canCreate","canUpdate","canDelete","DefaultValues","Accept","_data$Items","Items","map","e","workingDocumentBody","uploadTempFile","file","fileName","onUploadProgress","onDownloadProgress","apiConfig","tempSlotBody","FormData","tempFile","formData","contentType","getMimeType","File","mimeTypeWhitelist","indexOf","mimeType","name","temporarySlot","url","persistedAttachment","uid","useRuntimeConfig","public","API_URL","upload","_this2","header","urls","Promise","reject","sMimeType","type","sExt","iIndex","lastIndexOf","substring","toLowerCase"],"mappings":"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"}