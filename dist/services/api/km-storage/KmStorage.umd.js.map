{"version":3,"file":"KmStorage.umd.js","sources":["../../../../src/services/api/api-base.js","../../../../src/services/api/km-storage/KmDocuments.js","../../../../src/services/api/km-storage/KmDrafts.js","../../../../src/services/api/km-storage/KmStorage.js"],"sourcesContent":["import axios from 'axios'\r\nimport { isFunction } from 'lodash'\r\nimport * as Vue from 'vue'\r\n\r\nlet sitePrefixUrl = 'https://api.cbd.int';\r\n\r\nif(/\\.cbd\\.int$/i   .test(window?.location?.hostname || '')) sitePrefixUrl= 'https://api.cbd.int';\r\nif(/\\.cbddev\\.xyz$/i.test(window?.location?.hostname || '')) sitePrefixUrl= 'https://api.cbddev.xyz';\r\nif(/\\localhost$/i   .test(window?.location?.hostname || '')) sitePrefixUrl= '/';\r\n\r\nconst defaultOptions = { \r\n   prefixUrl:  sitePrefixUrl, \r\n   timeout  : 30 * 1000,\r\n   token: Vue?.prototype?.$auth?.strategy?.token?.get()  \r\n}\r\n\r\nexport default class ApiBase\r\n{\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    if(isFunction(options)) options = { token : options }\r\n\r\n    const { token, prefixUrl, timeout, tokenType } = { ...defaultOptions, ...options }\r\n\r\n    this.config = {\r\n      baseURL : prefixUrl,\r\n      timeout,\r\n      tokenType,\r\n      token,\r\n    }\r\n\r\n    const http = async function (...args) {   \r\n      return (await loadAsyncHeaders(this.config))(...args);\r\n    }\r\n\r\n    http.get     = async (...args)=> (await loadAsyncHeaders(this.config)).get    (...args);\r\n    http.head    = async (...args)=> (await loadAsyncHeaders(this.config)).head   (...args);\r\n    http.post    = async (...args)=> (await loadAsyncHeaders(this.config)).post   (...args);\r\n    http.put     = async (...args)=> (await loadAsyncHeaders(this.config)).put    (...args);\r\n    http.patch   = async (...args)=> (await loadAsyncHeaders(this.config)).patch  (...args);\r\n    http.delete  = async (...args)=> (await loadAsyncHeaders(this.config)).delete (...args);\r\n    http.options = async (...args)=> (await loadAsyncHeaders(this.config)).options(...args);\r\n    http.request = async (...args)=> (await loadAsyncHeaders(this.config)).request(...args);\r\n\r\n    this.http = http;\r\n  }\r\n}\r\n\r\nasync function loadAsyncHeaders(baseConfig) {\r\n\r\n  const { token, tokenType, ...config } = baseConfig || {}\r\n\r\n  const headers = { ...(config.headers || {}) };\r\n\r\n  if(token) {\r\n      headers.Authorization = `${tokenType||'Bearer'} ${token}`;\r\n  }\r\n\r\n  return axios.create({ ...config, headers } );\r\n\r\n}\r\n\r\n//////////////////////////\r\n// Helpers\r\n////////////////////////\r\n\r\nexport function tryCastToApiError(error) {\r\n\r\n  if(error && error.response && error.response.data && error.response.data.code) {\r\n      const apiError = error.response.data\r\n      throw error.response.data;\r\n  }\r\n\r\n  throw error\r\n}\r\n\r\nexport function stringifyUrlParam(value) {\r\n  if (value instanceof(Date))   {return value.toISOString()}    \r\n  if (value instanceof(Object)) {return JSON.stringify(value)}  \r\n  return value; \r\n}\r\n\r\nexport function stringifyUrlParams(valueObj) {\r\n  const returnObj = {};\r\n\r\n  for (const [key, value] of Object.entries(valueObj)) {\r\n    if (isValid(value)){\r\n      returnObj[key] = stringifyUrlParam(value);\r\n    }\r\n  }\r\n  \r\n  return returnObj;\r\n}\r\n\r\nexport function mapObjectId(id){  \r\n  return isObjectId(id)? { $oid: id } : id\r\n}\r\n\r\nexport function isObjectId(id){\r\n  return /^[a-f0-9]{24}/i.test(id);\r\n}\r\n\r\nexport function isValid(params){\r\n  return ![undefined, null].includes(params);\r\n}","import ApiBase, { tryCastToApiError, isValid, stringifyUrlParams } from '../api-base';\r\n\r\nconst  serviceUrls = { \r\n  documentQueryUrl      (                     ){ return \"/api/v2013/documents\" },\r\n  documentUrl           (identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}` },\r\n  documentInfoUrl       (identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/info` }, \r\n  validateUrl           (                     ){ return \"/api/v2013/documents/x/validate\" },\r\n  attachmentUrl         (identifier, filename ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/attachments/${encodeURIComponent(filename)}` },\r\n  temporaryAttachmentUrl(                     ){ return `/api/v2015/temporary-files` },\r\n  persistAttachmentUrl  (identifier, guid     ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/attachments/persist-temporary/${encodeURIComponent(guid)}` },\r\n  securityUrl           (identifier, operation){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/securities/${encodeURIComponent(operation)}` },\r\n  documentVersionListUrl(identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions` },\r\n  documentVersionUrl    (identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/:revision` },\r\n  documentVersionInfoUrl(identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/:revision/info` } \r\n}\r\n\r\n\r\nexport class KmDocumentsApi extends ApiBase\r\n{\r\n  #realm;\r\n  constructor(options) {  \r\n    super(options );\r\n    this.self = this;\r\n    this.#realm = options.realm;\r\n  }\r\n\r\n  async query( {realm, q, s, l, sk }={}){\r\n    const params = stringifyUrlParams( { \r\n      $filter:q, \r\n      $orderby:s,\r\n      $skip:sk, \r\n      $top:l,\r\n      collection : \"my\"\r\n    });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n    \r\n    return this.http.get(serviceUrls.documentQueryUrl(), { headers, params } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async get(identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n        \r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.get(serviceUrls.documentUrl(identifier) ,{ headers } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n  async getInfo(identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n        \r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.get(serviceUrls.documentInfoUrl(identifier) ,{ headers } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async exists( identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.head(serviceUrls.documentUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async put( identifier, body, {realm}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(body)) throw Error(`invalid value for body`);  \r\n  \r\n    const Realm =  { Realm : realm || this.#realm || undefined };  \r\n    const ContentType = { 'Content-Type': 'application/json' };\r\n    const headers =  { ...Realm , ...ContentType}\r\n    \r\n    return this.http.put(serviceUrls.documentUrl(identifier), body , { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async delete(identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.delete(serviceUrls.documentUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n   \r\n  async validate(body, {realm, schema, metadata }={}){\r\n    if(!isValid(body)) throw Error(`invalid value for body`);  \r\n\r\n    const params = stringifyUrlParams( { schema, metadata });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n   \r\n    return this.http.put(serviceUrls.validateUrl(), body, { headers, params } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async canCreate(identifier, {realm, schema, metadata}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(schema)) throw Error(`invalid value for schema`);  \r\n\r\n    const params = stringifyUrlParams({ schema, metadata });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'create'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async canUpdate(identifier,  {realm, metadata }={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const params = stringifyUrlParams( {metadata });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'update'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  } \r\n \r\n  async canDelete(identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n    \r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n   \r\n    return this.http.get(serviceUrls.securityUrl(identifier, 'delete'), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n\r\nexport class KmDocumentsVersionApi extends ApiBase\r\n{\r\n  #realm;\r\n  constructor(options) {    \r\n    super(options);\r\n    this.self = this;\r\n    this.#realm = options.realm;\r\n  }\r\n  \r\n\r\n  async query(identifier, {realm}={}){\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n    \r\n    return this.http.get(serviceUrls. documentVersionListUrl(identifier) , { headers, params } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async get(identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n        \r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.get(serviceUrls.documentVersionUrl(identifier) ,{ headers } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n\r\n  async getInfo(identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n        \r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.get(serviceUrls.documentVersionInfoUrl(identifier) ,{ headers } )\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async exists( identifier, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };  \r\n\r\n    return this.http.head(serviceUrls.documentVersionUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n}\r\n\r\nexport class KmAttachmentsApi extends ApiBase\r\n{\r\n  #realm;\r\n  constructor(options) {    \r\n    super(options);\r\n    this.self = this;\r\n    this.#realm = options.realm;\r\n  }\r\n\r\n  async uploadTempFile(identifier, file, fileName, options)  {\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(file))       throw Error(`invalid value for file`);  \r\n    if(!isValid(fileName))   throw Error(`invalid value for fileName`);  \r\n    if(!isValid(options))    throw Error(`invalid value for options`);  \r\n    \r\n    \r\n    const { timeout, onUploadProgress, onDownloadProgress }= { ...(options||{}) };\r\n\r\n    const apiConfig = {\r\n      headers: {},\r\n      timeout: timeout || 60 * 60 * 1000,\r\n      onUploadProgress, \r\n      onDownloadProgress\r\n    };\r\n    \r\n    const tempSlotBody = {\r\n        filename    : fileName,\r\n    }\r\n\r\n    //find the content type and validate with whitelist\r\n    if(file instanceof FormData){\r\n        const tempFile = formData.get('file')\r\n        if(tempFile){\r\n            tempSlotBody.contentType = this.getMimeType(file);\r\n        }\r\n    }\r\n    else if(file instanceof File){\r\n        tempSlotBody.contentType = this.getMimeType(file)\r\n    }\r\n    else{\r\n        throw new Error('Unable to read file information.')\r\n    }\r\n    \r\n    if (this.mimeTypeWhitelist().indexOf(tempSlotBody.contentType) < 0) {\r\n        throw new Error(\"File type not supported: \" + mimeType + \"(\" + file.name + \")\");\r\n    }\r\n\r\n    //const key = S4();\r\n    // get a temporary slot from S3 to upload the file\r\n    const temporarySlot = this.http.put(serviceUrls.temporaryAttachmentUrl(),  tempSlotBody  )\r\n                                   .then(res => res.data)\r\n                                   .catch(tryCastToApiError);\r\n    \r\n    // upload the file to the temporary slot on S3    \r\n    apiConfig.headers['Content-Type' ] = temporarySlot.contentType;\r\n    //apiConfig.headers['Authorization'] = undefined;\r\n    const temporaryAttachment =  this.http.put(temporarySlot.url, file,  {  ...apiConfig} )\r\n                                         .then(res => res.data)\r\n                                         .catch(tryCastToApiError);\r\n\r\n    //persists the file using the KM persists attachments endpoint\r\n    const persistedAttachment =  this.http.post(serviceUrls.persistAttachmentUrl(identifier, temporarySlot.uid), fileName,  { params } )\r\n                                          .then(res => res.data)\r\n                                          .catch(tryCastToApiError);\r\n    \r\n    const config = useRuntimeConfig();\r\n    return {\r\n        ...persistedAttachment,\r\n        url     : config.public.API_URL+persistedAttachment.url        \r\n    };\r\n  }\r\n\r\n  async upload(identifier, file,  {contentType, headers  }={}) {\r\n        if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n        if(!isValid(file)) throw Error(`invalid value for file`);  \r\n\r\n        params = {contentType, identifier, filename } || {};\r\n        params.identifier = identifier;\r\n        params.filename = file.name;\r\n\r\n        var contentType = params.contentType || this.getMimeType(file);\r\n\r\n        // params.contentType = undefined;\r\n        params.headers = params.header || {};\r\n        params.headers[\"Content-Type\"] = contentType;\r\n\r\n        ////TEMP////////////////\r\n            //upload to temp url\r\n            const data = this.http.put(serviceUrls.attachmentUrl(identifier, file.name), body=file,  { params } )\r\n                                  .then(res => res.data)\r\n                                  .catch(tryCastToApiError);\r\n            \r\n            const config = useRuntimeConfig()\r\n            data.url = config.public.API_URL+data.url;\r\n            data.urls = {//required by ckeditor\r\n                \"default\": data.url \r\n            };\r\n            \r\n            return data;\r\n        ///////TEMP////////////////\r\n\r\n      //TODO : use s3\r\n      //1 request for temp file from s3\r\n      //upload file \r\n      //return s3 location\r\n      //persist temp file location in api\r\n  }\r\n  getMimeType(file) {\r\n    if(!isValid(file)) throw Error(`invalid value for file`);  \r\n\r\n    const filename = file.name\r\n    let  sMimeType = file.type || \"application/octet-stream\";     \r\n\r\n    if (filename && sMimeType == \"application/octet-stream\") {\r\n        var sExt = \"\";\r\n        var iIndex = filename.lastIndexOf(\".\");\r\n\r\n        if (iIndex >= 0)\r\n            sExt = filename.substring(iIndex).toLowerCase();\r\n\r\n        if (sExt == \".json\") sMimeType = \"application/json\";\r\n        if (sExt == \".geojson\") sMimeType = \"application/json\";\r\n        if (sExt == \".xml\") sMimeType = \"application/xml\";\r\n    }\r\n\r\n    return sMimeType;\r\n  }\r\n  \r\n}\r\n\r\nexport const mimeTypeWhitelist =\r\n   [\r\n    \"application/json\",\"application/ogg\",\"application/pdf\",\"application/xml\",\"application/zip\",\r\n    \"application/x-zip\",\"application/x-zip-compressed\",\"audio/mpeg\",\"audio/x-ms-wma\",\"audio/x-wav\",\r\n    \"image/gif\",\"image/jpeg\", \"image/png\",\"image/bmp\",\r\n    \"image/tiff\",\r\n    \"text/csv\",\"text/html\",\"text/plain\",\"text/xml\",\"video/mpeg\",\"video/mp4\",\"video/quicktime\",\r\n    \"video/x-ms-wmv\",\"video/x-msvideo\",\"video/x-flv\",\"application/vnd.oasis.opendocument.text\",\r\n    \"application/vnd.oasis.opendocument.spreadsheet\",\"application/vnd.oasis.opendocument.presentation\",\"application/vnd.oasis.opendocument.graphics\",\r\n    \"application/vnd.ms-excel\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.ms-powerpoint\",\"application/msword\",\r\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n  ]\r\n","import ApiBase, { tryCastToApiError, isValid, stringifyUrlParams } from '../api-base';\r\n\r\nconst  serviceUrls = { \r\n  documentQueryUrl      (                     ){ return \"/api/v2013/documents\" },\r\n  draftUrl              (identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft` },\r\n  draftSecurityUrl      (identifier, operation){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/securities/${encodeURIComponent(operation)}` },\r\n  draftLockUrl          (identifier, lockID   ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/locks/${encodeURIComponent(lockID)}` },\r\n  draftLockListUrl      (identifier           ){ return `/api/v2013/documents/${encodeURIComponent(identifier)}/versions/draft/locks` },\r\n}\r\n\r\nexport class KmDraftsApi extends ApiBase\r\n{\r\n  #realm;\r\n  constructor(options) {    \r\n    super(options);\r\n    this.self = this;\r\n    this.#realm = options.realm;\r\n  }\r\n\r\n  async query({realm, q, s, l, sk }={}){  \r\n    const params = stringifyUrlParams( {    \r\n      $filter:q, \r\n      $orderby:s,\r\n      $top:l,\r\n      $skip:sk, \r\n      collection : \"mydraft\"  \r\n    });\r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    const data =  this.http.get(serviceUrls.documentQueryUrl(), { headers, params} )\r\n                           .then(res => res.data)\r\n                           .catch(tryCastToApiError);\r\n     \r\n    if(data?.Items?.length){\r\n      data.Items = data.Items.map(e=>{\r\n            if(e.workingDocumentBody){\r\n                e.body = e.workingDocumentBody;\r\n            }\r\n            return e;\r\n      });\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async get(identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    \r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    const data =  this.http.get(serviceUrls.draftUrl(identifier), { headers })\r\n                           .then(res => res.data)\r\n                           .catch(tryCastToApiError);\r\n    \r\n    if(data.workingDocumentBody){\r\n        data.body = data.workingDocumentBody;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async exists( identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n     return this.http.head(serviceUrls.draftUrl(identifier), { headers })\r\n                     .then(res => res.data)\r\n                     .catch(tryCastToApiError);\r\n  }\r\n\r\n  async put( identifier, body, {realm, schema}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(body)) throw Error(`invalid value for body`);  \r\n\r\n    const params = stringifyUrlParams( {schema}); \r\n\r\n    const Realm =  { Realm : realm || this.#realm || undefined };\r\n    const ContentType = { 'Content-Type': 'application/json' };\r\n    const headers =  { ...Realm , ...ContentType}\r\n\r\n    return this.http.put(serviceUrls.draftUrl(identifier),  body , { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async delete(identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.delete(serviceUrls.draftUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n  \r\n  async canCreate(identifier, {realm, schema, metadata }={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const params = stringifyUrlParams( {schema, metadata }); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'create'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async canUpdate(identifier, {realm, metadata}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    const params = stringifyUrlParams( {metadata}); \r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'update'), { headers, params })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async canDelete(identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.get(serviceUrls.draftSecurityUrl(identifier, 'delete'), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n\r\n\r\nexport class KmLocksApi extends ApiBase\r\n{\r\n  #realm;\r\n  constructor(options) {    \r\n    super(options);\r\n    this.self = this;\r\n    this.#realm = options.realm;\r\n  }\r\n\r\n  async query(identifier, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n \r\n    return this.http.get(serviceUrls.draftLockListUrl(identifier), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async get(identifier, lockID, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.get(serviceUrls.draftLockUrl(identifier, lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n\r\n  async exists(identifier,lockID, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.head(serviceUrls.draftLockUrl(identifier, lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }  \r\n \r\n  async put(identifier,lockID, body, {realm}={}){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n    \r\n    return this.http.put(serviceUrls.draftLockUrl(identifier,lockID), body, { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n \r\n  async delete(identifier,lockID, {realm}={} ){\r\n    if(!isValid(identifier)) throw Error(`invalid value for identifier`);  \r\n    if(!isValid(lockID)) throw Error(`invalid value for lockID`); \r\n\r\n    const headers =  { Realm : realm || this.#realm || undefined };\r\n\r\n    return this.http.delete(serviceUrls.draftLockUrl(identifier,lockID), { headers })\r\n                    .then(res => res.data)\r\n                    .catch(tryCastToApiError);\r\n  }\r\n}\r\n","import ApiBase from '../api-base';\r\nimport { KmDocumentsApi, KmDocumentsVersionApi, KmAttachmentsApi } from './KmDocuments'\r\nimport { KmDraftsApi, KmLocksApi } from './KmDrafts' \r\n\r\nexport default class KmStorageApi extends ApiBase \r\n{\r\n  constructor(options) {\r\n    super(options);\r\n    \r\n    this.documents           = new KmDocumentsApi(options);\r\n    this.documentsVersion    = new KmDocumentsVersionApi(options);\r\n    this.drafts              = new KmDraftsApi(options);\r\n    this.locks               = new KmLocksApi(options);\r\n    this.attachments         = new KmAttachmentsApi(options);    \r\n  }\r\n}\r\n\r\n"],"names":["sitePrefixUrl","test","_window","window","location","hostname","_window2","_window3","defaultOptions","prefixUrl","timeout","token","Vue","_Vue__namespace$proto","prototype","$auth","strategy","get","ApiBase","constructor","options","_this","isFunction","tokenType","config","baseURL","http","loadAsyncHeaders","arguments","head","post","put","patch","delete","request","baseConfig","headers","Authorization","concat","axios","create","tryCastToApiError","error","response","data","code","stringifyUrlParam","value","Date","toISOString","Object","JSON","stringify","stringifyUrlParams","valueObj","returnObj","key","entries","isValid","params","undefined","includes","serviceUrls","documentQueryUrl","documentUrl","identifier","encodeURIComponent","documentInfoUrl","validateUrl","attachmentUrl","filename","temporaryAttachmentUrl","persistAttachmentUrl","guid","securityUrl","operation","documentVersionListUrl","documentVersionUrl","documentVersionInfoUrl","_realm","WeakMap","KmDocumentsApi","_classPrivateFieldInitSpec","self","_classPrivateFieldSet","realm","query","q","s","l","sk","length","$filter","$orderby","$skip","$top","collection","Realm","_classPrivateFieldGet","then","res","catch","Error","getInfo","exists","body","_ref","ContentType","validate","schema","metadata","canCreate","canUpdate","canDelete","_realm2","KmDocumentsVersionApi","_realm3","KmAttachmentsApi","uploadTempFile","file","fileName","onUploadProgress","onDownloadProgress","apiConfig","tempSlotBody","FormData","tempFile","formData","contentType","getMimeType","File","mimeTypeWhitelist","indexOf","mimeType","name","temporarySlot","url","persistedAttachment","uid","useRuntimeConfig","public","API_URL","upload","_this2","header","urls","e","Promise","reject","sMimeType","type","sExt","iIndex","lastIndexOf","substring","toLowerCase","draftUrl","draftSecurityUrl","draftLockUrl","lockID","draftLockListUrl","_realm4","KmDraftsApi","_data$Items","Items","map","workingDocumentBody","_realm5","KmLocksApi","KmStorageApi","documents","documentsVersion","drafts","locks","attachments"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAIA,IAAIA,aAAa,GAAG,qBAAqB;EAEzC,IAAG,cAAc,CAAIC,IAAI,CAAC,EAAAC,OAAA,GAAAC,MAAM,cAAAD,OAAA,gBAAAA,OAAA,GAANA,OAAA,CAAQE,QAAQ,cAAAF,OAAA,uBAAhBA,OAAA,CAAkBG,QAAQ,KAAI,EAAE,CAAC,EAAEL,aAAa,GAAE,qBAAqB;EACjG,IAAG,iBAAiB,CAACC,IAAI,CAAC,EAAAK,QAAA,GAAAH,MAAM,cAAAG,QAAA,gBAAAA,QAAA,GAANA,QAAA,CAAQF,QAAQ,cAAAE,QAAA,uBAAhBA,QAAA,CAAkBD,QAAQ,KAAI,EAAE,CAAC,EAAEL,aAAa,GAAE,wBAAwB;EACpG,IAAG,cAAc,CAAIC,IAAI,CAAC,EAAAM,QAAA,GAAAJ,MAAM,cAAAI,QAAA,gBAAAA,QAAA,GAANA,QAAA,CAAQH,QAAQ,cAAAG,QAAA,uBAAhBA,QAAA,CAAkBF,QAAQ,KAAI,EAAE,CAAC,EAAEL,aAAa,GAAE,GAAG;EAE/E,MAAMQ,cAAc,GAAG;IACpBC,SAAS,EAAGT,aAAa;IACzBU,OAAO,EAAI,EAAE,GAAG,IAAI;IACpBC,KAAK,EAAEC,cAAG,aAAHA,cAAG,gBAAAC,qBAAA,GAAHD,cAAG,CAAEE,SAAS,cAAAD,qBAAA,gBAAAA,qBAAA,GAAdD,qBAAAA,CAAgBG,KAAK,cAAAF,qBAAA,gBAAAA,qBAAA,GAArBD,qBAAAA,CAAuBI,QAAQ,cAAAH,qBAAA,gBAAAA,qBAAA,GAA/BD,qBAAAA,CAAiCD,KAAK,cAAAE,qBAAA,uBAAtCD,qBAAAA,CAAwCK,GAAG,CAAE;EACvD,CAAC;EAEc,MAAMC,OAAO,CAC5B;IACEC,WAAWA,CAACC,OAAO,EAAE;MAAA,IAAAC,KAAA;MACnBD,OAAO,GAAGA,OAAO,IAAI,EAAE;MAEvB,IAAGE,MAAAA,CAAAA,UAAU,CAACF,OAAO,CAAC,EAAEA,OAAO,GAAG;QAAET,KAAK,EAAGS;MAAS,CAAA;MAErD,MAAM;QAAET,KAAK;QAAEF,SAAS;QAAEC,OAAO;QAAEa;MAAS,CAAE,GAAG;QAAE,GAAGf,cAAc;QAAE,GAAGY;MAAS,CAAA;MAElF,IAAI,CAACI,MAAM,GAAG;QACZC,OAAO,EAAGhB,SAAS;QACnBC,OAAO;QACPa,SAAS;QACTZ;MACD,CAAA;MAED,MAAMe,IAAI,GAAG,eAAAA,CAAA,EAAyB;QACpC,OAAO,CAAC,MAAMC,gBAAgB,CAAC,IAAI,CAACH,MAAM,CAAC,EAAE,GAAAI,SAAO,CAAC;MACtD,CAAA;MAEDF,IAAI,CAACT,GAAG,GAAO;QAAA,OAAkB,CAAC,MAAMU,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEP,GAAG,CAAK,GAAAW,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACG,IAAI,GAAM;QAAA,OAAkB,CAAC,MAAMF,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEK,IAAI,CAAI,GAAAD,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACI,IAAI,GAAM;QAAA,OAAkB,CAAC,MAAMH,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEM,IAAI,CAAI,GAAAF,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACK,GAAG,GAAO;QAAA,OAAkB,CAAC,MAAMJ,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEO,GAAG,CAAK,GAAAH,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACM,KAAK,GAAK;QAAA,OAAkB,CAAC,MAAML,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEQ,KAAK,CAAG,GAAAJ,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACO,MAAM,GAAI;QAAA,OAAkB,CAAC,MAAMN,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAES,MAAM,CAAE,GAAAL,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACN,OAAO,GAAG;QAAA,OAAkB,CAAC,MAAMO,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEJ,OAAO,CAAC,GAAAQ,SAAO,CAAC;MAAA;MACvFF,IAAI,CAACQ,OAAO,GAAG;QAAA,OAAkB,CAAC,MAAMP,gBAAgB,CAACN,KAAI,CAACG,MAAM,CAAC,EAAEU,OAAO,CAAC,GAAAN,SAAO,CAAC;MAAA;MAEvF,IAAI,CAACF,IAAI,GAAGA,IAAI;IACjB;EACH;EAEA,eAAeC,gBAAgBA,CAACQ,UAAU,EAAE;IAE1C,MAAM;MAAExB,KAAK;MAAEY,SAAS;MAAE,GAAGC;IAAQ,CAAA,GAAGW,UAAU,IAAI,CAAE,CAAA;IAExD,MAAMC,OAAO,GAAG;MAAE,IAAIZ,MAAM,CAACY,OAAO,IAAI,CAAA,CAAE;IAAC,CAAE;IAE7C,IAAGzB,KAAK,EAAE;MACNyB,OAAO,CAACC,aAAa,MAAAC,MAAA,CAAMf,SAAS,IAAE,QAAQ,OAAAe,MAAA,CAAI3B,KAAK,CAAE;IAC5D;IAED,OAAO4B,cAAAA,CAAAA,SAAAA,CAAK,CAACC,MAAM,CAAC;MAAE,GAAGhB,MAAM;MAAEY;IAAS,CAAA,CAAE;EAE9C;;EAEA;EACA;EACA;;EAEO,SAASK,iBAAiBA,CAACC,KAAK,EAAE;IAEvC,IAAGA,KAAK,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,IAAIF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,IAAI,EAAE;MAC1DH,KAAK,CAACC,QAAQ,CAACC,IAAI;MACpC,MAAMF,KAAK,CAACC,QAAQ,CAACC,IAAI;IAC5B;IAED,MAAMF,KAAK;EACb;EAEO,SAASI,iBAAiBA,CAACC,KAAK,EAAE;IACvC,IAAIA,KAAK,YAAYC,IAAK,EAAI;MAAC,OAAOD,KAAK,CAACE,WAAW,CAAA,CAAE;IAAA;IACzD,IAAIF,KAAK,YAAYG,MAAO,EAAE;MAAC,OAAOC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC;IAAA;IAC3D,OAAOA,KAAK;EACd;EAEO,SAASM,kBAAkBA,CAACC,QAAQ,EAAE;IAC3C,MAAMC,SAAS,GAAG,CAAA,CAAE;IAEpB,KAAK,MAAM,CAACC,GAAG,EAAET,KAAK,CAAC,IAAIG,MAAM,CAACO,OAAO,CAACH,QAAQ,CAAC,EAAE;MACnD,IAAII,OAAO,CAACX,KAAK,CAAC,EAAC;QACjBQ,SAAS,CAACC,GAAG,CAAC,GAAGV,iBAAiB,CAACC,KAAK,CAAC;MAC1C;IACF;IAED,OAAOQ,SAAS;EAClB;EAUO,SAASG,OAAOA,CAACC,MAAM,EAAC;IAC7B,OAAO,CAAC,CAACC,SAAS,EAAE,IAAI,CAAC,CAACC,QAAQ,CAACF,MAAM,CAAC;EAC5C;ECvGA,MAAOG,aAAW,GAAG;IACnBC,gBAAgBA,CAAA,EAA6B;MAAE,OAAO,sBAAsB;IAAE,CAAA;IAC9EC,WAAWA,CAAYC,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAI,CAAA;IAChHE,eAAeA,CAAQF,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAS,CAAA;IACrHG,WAAWA,CAAA,EAAkC;MAAE,OAAO,iCAAiC;IAAE,CAAA;IACzFC,aAAaA,CAAUJ,UAAU,EAAEK,QAAQ,EAAE;MAAE,+BAAAhC,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC,mBAAA3B,MAAA,CAAgB4B,kBAAkB,CAACI,QAAQ,CAAC;IAAI,CAAA;IAC5JC,sBAAsBA,CAAA,EAAuB;MAAE;IAAqC,CAAA;IACpFC,oBAAoBA,CAAGP,UAAU,EAAEQ,IAAI,EAAM;MAAE,+BAAAnC,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC,qCAAA3B,MAAA,CAAkC4B,kBAAkB,CAACO,IAAI,CAAC;IAAI,CAAA;IAC1KC,WAAWA,CAAYT,UAAU,EAAEU,SAAS,EAAC;MAAE,+BAAArC,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC,kBAAA3B,MAAA,CAAe4B,kBAAkB,CAACS,SAAS,CAAC;IAAI,CAAA;IAC5JC,sBAAsBA,CAACX,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAa,CAAA;IACzHY,kBAAkBA,CAAKZ,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAuB,CAAA;IACnIa,sBAAsBA,CAACb,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAA4B;EAC1I,CAAC;EAAA,IAAAc,MAAA,oBAAAC,OAAA;EAGM,MAAMC,cAAc,SAAS/D,OAAO,CAC3C;IAEEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAE;MAAC8D,0BAAA,OAAAH,MAAA;MAChB,IAAI,CAACI,IAAI,GAAG,IAAI;MAChBC,qBAAA,CAAAL,MAAA,MAAI,EAAU3D,OAAO,CAACiE,KAAK;IAC5B;IAED,MAAMC,KAAKA,CAAA,EAA2B;MAAA,IAAzB;QAACD,KAAK;QAAEE,CAAC;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAI,CAAA,GAAA9D,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MACnC,MAAM+B,MAAM,GAAGN,kBAAkB,CAAE;QACjCuC,OAAO,EAACL,CAAC;QACTM,QAAQ,EAACL,CAAC;QACVM,KAAK,EAACJ,EAAE;QACRK,IAAI,EAACN,CAAC;QACNO,UAAU,EAAG;MACnB,CAAK,CAAC;MAEF,MAAM5D,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACC,gBAAgB,EAAE,EAAE;QAAE3B,OAAO;QAAEuB;OAAU,CAAA,CACzDwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMxB,GAAGA,CAACgD,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAC9B,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACE,WAAW,CAACC,UAAU,CAAC,EAAE;QAAE7B;OAAW,CAAA,CACtD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAGD,MAAM8D,OAAOA,CAACtC,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAClC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACK,eAAe,CAACF,UAAU,CAAC,EAAE;QAAE7B;OAAW,CAAA,CAC1D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAM+D,MAAMA,CAAEvC,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAClC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACG,IAAI,CAACiC,aAAW,CAACE,WAAW,CAACC,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CACtD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMV,GAAGA,CAAEkC,UAAU,EAAEwC,IAAI,EAAAC,IAAA,EAAU;MAAA,IAAR;QAACrB;MAAK,CAAC,GAAAqB,IAAA;MAClC,IAAG,CAAChD,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAAC+C,IAAI,CAAC,EAAE,MAAMH,KAAK,yBAAyB,CAAC;MAExD,MAAML,KAAK,GAAI;QAAEA,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAC5D,MAAM+C,WAAW,GAAG;QAAE,cAAc,EAAE;OAAoB;MAC1D,MAAMvE,OAAO,GAAI;QAAE,GAAG6D,KAAK;QAAG,GAAGU;MAAW,CAAC;MAE7C,OAAO,IAAI,CAACjF,IAAI,CAACK,GAAG,CAAC+B,aAAW,CAACE,WAAW,CAACC,UAAU,CAAC,EAAEwC,IAAI,EAAG;QAAErE;OAAS,CAAC,CAC5D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMR,MAAMA,CAACgC,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACjC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACO,MAAM,CAAC6B,aAAW,CAACE,WAAW,CAACC,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CACxD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMmE,QAAQA,CAACH,IAAI,EAAgC;MAAA,IAA9B;QAACpB,KAAK;QAAEwB,MAAM;QAAEC;MAAU,CAAA,GAAAlF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MAChD,IAAG,CAAC8B,OAAO,CAAC+C,IAAI,CAAC,EAAE,MAAMH,KAAK,yBAAyB,CAAC;MAExD,MAAM3C,MAAM,GAAGN,kBAAkB,CAAE;QAAEwD,MAAM;QAAEC;MAAU,CAAA,CAAC;MAExD,MAAM1E,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACK,GAAG,CAAC+B,aAAW,CAACM,WAAW,CAAE,CAAA,EAAEqC,IAAI,EAAE;QAAErE,OAAO;QAAEuB;OAAU,CAAA,CAC1DwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMsE,SAASA,CAAC9C,UAAU,EAA+B;MAAA,IAA7B;QAACoB,KAAK;QAAEwB,MAAM;QAAEC;MAAQ,CAAC,GAAAlF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MACtD,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAACmD,MAAM,CAAC,EAAE,MAAMP,KAAK,2BAA2B,CAAC;MAE5D,MAAM3C,MAAM,GAAGN,kBAAkB,CAAC;QAAEwD,MAAM;QAAEC;MAAU,CAAA,CAAC;MAEvD,MAAM1E,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACY,WAAW,CAACT,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B,OAAO;QAAEuB;MAAM,CAAE,CAAC,CACvEwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMuE,SAASA,CAAC/C,UAAU,EAAyB;MAAA,IAAtB;QAACoB,KAAK;QAAEyB;MAAQ,CAAE,GAAAlF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAChD,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAM3C,MAAM,GAAGN,kBAAkB,CAAE;QAACyD;MAAU,CAAA,CAAC;MAE/C,MAAM1E,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACY,WAAW,CAACT,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B,OAAO;QAAEuB;MAAM,CAAE,CAAC,CACvEwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMwE,SAASA,CAAChD,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACpC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAnB,MAAA,EAAI,IAAI,CAAO,IAAInB;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACY,WAAW,CAACT,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B;OAAS,CAAC,CAC/D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;EACH;EAAC,IAAAyE,OAAA,oBAAAlC,OAAA;EAEM,MAAMmC,qBAAqB,SAASjG,OAAO,CAClD;IAEEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAC;MAAC8D,0BAAA,OAAAgC,OAAA;MACf,IAAI,CAAC/B,IAAI,GAAG,IAAI;MAChBC,qBAAA,CAAA8B,OAAA,MAAI,EAAU9F,OAAO,CAACiE,KAAK;IAC5B;IAGD,MAAMC,KAAKA,CAACrB,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAEhC,MAAMQ,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAgB,OAAA,EAAI,IAAI,CAAO,IAAItD;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAAEc,sBAAsB,CAACX,UAAU,CAAC,EAAG;QAAE7B,OAAO;QAAEuB;OAAU,CAAA,CAC3EwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMxB,GAAGA,CAACgD,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAC9B,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAgB,OAAA,EAAI,IAAI,CAAO,IAAItD;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACe,kBAAkB,CAACZ,UAAU,CAAC,EAAE;QAAE7B;OAAW,CAAA,CAC7D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAGD,MAAM8D,OAAOA,CAACtC,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAClC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAgB,OAAA,EAAI,IAAI,CAAO,IAAItD;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,aAAW,CAACgB,sBAAsB,CAACb,UAAU,CAAC,EAAE;QAAE7B;OAAW,CAAA,CACjE+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAM+D,MAAMA,CAAEvC,UAAU,EAAc;MAAA,IAAZ;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAClC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAgB,OAAA,EAAI,IAAI,CAAO,IAAItD;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACG,IAAI,CAACiC,aAAW,CAACe,kBAAkB,CAACZ,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CAC7D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;EAEH;EAAC,IAAA2E,OAAA,oBAAApC,OAAA;EAEM,MAAMqC,gBAAgB,SAASnG,OAAO,CAC7C;IAEEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAC;MAAC8D,0BAAA,OAAAkC,OAAA;MACf,IAAI,CAACjC,IAAI,GAAG,IAAI;MAChBC,qBAAA,CAAAgC,OAAA,MAAI,EAAUhG,OAAO,CAACiE,KAAK;IAC5B;IAED,MAAMiC,cAAcA,CAACrD,UAAU,EAAEsD,IAAI,EAAEC,QAAQ,EAAEpG,OAAO,EAAG;MACzD,IAAG,CAACsC,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAAC6D,IAAI,CAAC,EAAQ,MAAMjB,KAAK,yBAAyB,CAAC;MAC9D,IAAG,CAAC5C,OAAO,CAAC8D,QAAQ,CAAC,EAAI,MAAMlB,KAAK,6BAA6B,CAAC;MAClE,IAAG,CAAC5C,OAAO,CAACtC,OAAO,CAAC,EAAK,MAAMkF,KAAK,4BAA4B,CAAC;MAGjE,MAAM;QAAE5F,OAAO;QAAE+G,gBAAgB;QAAEC;MAAkB,CAAE,GAAE;QAAE,IAAItG,OAAO,IAAE,CAAE,CAAA;OAAG;MAE7E,MAAMuG,SAAS,GAAG;QAChBvF,OAAO,EAAE,CAAE,CAAA;QACX1B,OAAO,EAAEA,OAAO,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI;QAClC+G,gBAAgB;QAChBC;MACN,CAAK;MAED,MAAME,YAAY,GAAG;QACjBtD,QAAQ,EAAMkD;MACjB,CAAA;;MAEL;MACI,IAAGD,IAAI,YAAYM,QAAQ,EAAC;QACxB,MAAMC,QAAQ,GAAGC,QAAQ,CAAC9G,GAAG,CAAC,MAAM,CAAC;QACrC,IAAG6G,QAAQ,EAAC;UACRF,YAAY,CAACI,WAAW,GAAG,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;QACpD;MACJ,CAAA,MACI,IAAGA,IAAI,YAAYW,IAAI,EAAC;QACzBN,YAAY,CAACI,WAAW,GAAG,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;MACpD,CAAA,MACG;QACA,MAAM,IAAIjB,KAAK,CAAC,kCAAkC,CAAC;MACtD;MAED,IAAI,IAAI,CAAC6B,iBAAiB,EAAE,CAACC,OAAO,CAACR,YAAY,CAACI,WAAW,CAAC,GAAG,CAAC,EAAE;QAChE,MAAM,IAAI1B,KAAK,CAAC,2BAA2B,GAAG+B,QAAQ,GAAG,GAAG,GAAGd,IAAI,CAACe,IAAI,GAAG,GAAG,CAAC;MAClF;;MAEL;MACA;MACI,MAAMC,aAAa,GAAG,IAAI,CAAC7G,IAAI,CAACK,GAAG,CAAC+B,aAAW,CAACS,sBAAsB,CAAE,CAAA,EAAGqD,YAAe,CAAA,CAC1DzB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;;MAE5D;MACIkF,SAAS,CAACvF,OAAO,CAAC,cAAc,CAAE,GAAGmG,aAAa,CAACP,WAAW;MAClE;MACiC,IAAI,CAACtG,IAAI,CAACK,GAAG,CAACwG,aAAa,CAACC,GAAG,EAAEjB,IAAI,EAAG;QAAG,GAAGI;MAAS,CAAG,CAAA,CACjDxB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAE;;MAEnE;MACI,MAAMgG,mBAAmB,GAAI,IAAI,CAAC/G,IAAI,CAACI,IAAI,CAACgC,aAAW,CAACU,oBAAoB,CAACP,UAAU,EAAEsE,aAAa,CAACG,GAAG,CAAC,EAAElB,QAAQ,EAAG;QAAE7D;MAAM,CAAI,CAAA,CAC7FwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;MAE/D,MAAMjB,MAAM,GAAGmH,gBAAgB,EAAE;MACjC,OAAO;QACH,GAAGF,mBAAmB;QACtBD,GAAG,EAAOhH,MAAM,CAACoH,MAAM,CAACC,OAAO,GAACJ,mBAAmB,CAACD;MAC5D,CAAK;IACF;IAEKM,MAAMA,CAAC7E,UAAU,EAAEsD,IAAI;MAAA;QAAA,IAAAwB,MAAA;QAAA,IAAG;UAACf,WAAW;UAAE5F;QAAU,CAAA,GAAAR,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;QAAA,uBAAAoG,WAAA,EAAE;UACvD,IAAG,CAACtE,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;UACpE,IAAG,CAAC5C,OAAO,CAAC6D,IAAI,CAAC,EAAE,MAAMjB,KAAK,yBAAyB,CAAC;UAExD3C,MAAM,GAAG;YAACqE,WAAW;YAAE/D,UAAU;YAAEK;UAAQ,CAAE,IAAI,CAAA,CAAE;UACnDX,MAAM,CAACM,UAAU,GAAGA,UAAU;UAC9BN,MAAM,CAACW,QAAQ,GAAGiD,IAAI,CAACe,IAAI;UAE3B,IAAIN,WAAW,GAAGrE,MAAM,CAACqE,WAAW,IAAIe,MAAI,CAACd,WAAW,CAACV,IAAI,CAAC;;UAEtE;UACQ5D,MAAM,CAACvB,OAAO,GAAGuB,MAAM,CAACqF,MAAM,IAAI,CAAA,CAAE;UACpCrF,MAAM,CAACvB,OAAO,CAAC,cAAc,CAAC,GAAG4F,WAAW;;UAEpD;UACA;UACY,MAAMpF,IAAI,GAAGmG,MAAI,CAACrH,IAAI,CAACK,GAAG,CAAC+B,aAAW,CAACO,aAAa,CAACJ,UAAU,EAAEsD,IAAI,CAACe,IAAI,CAAC,EAAE7B,IAAI,GAACc,IAAI,EAAG;YAAE5D;UAAM,CAAI,CAAA,CAC9EwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;UAE/C,MAAMjB,MAAM,GAAGmH,gBAAgB,CAAE,CAAA;UACjC/F,IAAI,CAAC4F,GAAG,GAAGhH,MAAM,CAACoH,MAAM,CAACC,OAAO,GAACjG,IAAI,CAAC4F,GAAG;UACzC5F,IAAI,CAACqG,IAAI,GAAG;YAAA;YACR,SAAS,EAAErG,IAAI,CAAC4F;UAChC,CAAa;UAED,OAAO5F,IAAI;UACvB;;UAEA;UACA;UACA;UACA;UACA;QACG,CAAA,CAAAoF,WAAA;MAAA,SAAAkB,CAAA;QAAA,OAAAC,OAAA,CAAAC,MAAA,CAAAF,CAAA;MAAA;IAAA;IACDjB,WAAWA,CAACV,IAAI,EAAE;MAChB,IAAG,CAAC7D,OAAO,CAAC6D,IAAI,CAAC,EAAE,MAAMjB,KAAK,yBAAyB,CAAC;MAExD,MAAMhC,QAAQ,GAAGiD,IAAI,CAACe,IAAI;MAC1B,IAAKe,SAAS,GAAG9B,IAAI,CAAC+B,IAAI,IAAI,0BAA0B;MAExD,IAAIhF,QAAQ,IAAI+E,SAAS,IAAI,0BAA0B,EAAE;QACrD,IAAIE,IAAI,GAAG,EAAE;QACb,IAAIC,MAAM,GAAGlF,QAAQ,CAACmF,WAAW,CAAC,GAAG,CAAC;QAEtC,IAAID,MAAM,IAAI,CAAC,EACXD,IAAI,GAAGjF,QAAQ,CAACoF,SAAS,CAACF,MAAM,CAAC,CAACG,WAAW,CAAA,CAAE;QAEnD,IAAIJ,IAAI,IAAI,OAAO,EAAEF,SAAS,GAAG,kBAAkB;QACnD,IAAIE,IAAI,IAAI,UAAU,EAAEF,SAAS,GAAG,kBAAkB;QACtD,IAAIE,IAAI,IAAI,MAAM,EAAEF,SAAS,GAAG,iBAAiB;MACpD;MAED,OAAOA,SAAS;IACjB;EAEH;EClUA,MAAOvF,WAAW,GAAG;IACnBC,gBAAgBA,CAAA,EAA6B;MAAE,OAAO,sBAAsB;IAAE,CAAA;IAC9E6F,QAAQA,CAAe3F,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAmB,CAAA;IAC/H4F,gBAAgBA,CAAO5F,UAAU,EAAEU,SAAS,EAAC;MAAE,+BAAArC,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC,iCAAA3B,MAAA,CAA8B4B,kBAAkB,CAACS,SAAS,CAAC;IAAI,CAAA;IAC3KmF,YAAYA,CAAW7F,UAAU,EAAE8F,MAAM,EAAI;MAAE,+BAAAzH,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC,4BAAA3B,MAAA,CAAyB4B,kBAAkB,CAAC6F,MAAM,CAAC;IAAI,CAAA;IACnKC,gBAAgBA,CAAO/F,UAAU,EAAY;MAAE,+BAAA3B,MAAA,CAA+B4B,kBAAkB,CAACD,UAAU,CAAC;IAAyB;EACvI,CAAC;EAAA,IAAAgG,OAAA,oBAAAjF,OAAA;EAEM,MAAMkF,WAAW,SAAShJ,OAAO,CACxC;IAEEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAC;MAAC8D,0BAAA,OAAA+E,OAAA;MACf,IAAI,CAAC9E,IAAI,GAAG,IAAI;MAChBC,qBAAA,CAAA6E,OAAA,MAAI,EAAU7I,OAAO,CAACiE,KAAK;IAC5B;IAED,MAAMC,KAAKA,CAAA,EAA0B;MAAA,IAAA6E,WAAA;MAAA,IAAzB;QAAC9E,KAAK;QAAEE,CAAC;QAAEC,CAAC;QAAEC,CAAC;QAAEC;MAAI,CAAA,GAAA9D,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MAClC,MAAM+B,MAAM,GAAGN,kBAAkB,CAAE;QACjCuC,OAAO,EAACL,CAAC;QACTM,QAAQ,EAACL,CAAC;QACVO,IAAI,EAACN,CAAC;QACNK,KAAK,EAACJ,EAAE;QACRM,UAAU,EAAG;MACnB,CAAK,CAAC;MAEF,MAAM5D,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,MAAMhB,IAAI,GAAI,IAAI,CAAClB,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAACC,gBAAgB,EAAE,EAAE;QAAE3B,OAAO;QAAEuB;MAAM,CAAG,CAAA,CACxDwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;MAEhD,IAAGG,IAAI,aAAJA,IAAI,gBAAAuH,WAAA,GAAJvH,IAAI,CAAEwH,KAAK,cAAAD,WAAA,eAAXA,WAAA,CAAaxE,MAAM,EAAC;QACrB/C,IAAI,CAACwH,KAAK,GAAGxH,IAAI,CAACwH,KAAK,CAACC,GAAG,CAACnB,CAAC,IAAE;UACzB,IAAGA,CAAC,CAACoB,mBAAmB,EAAC;YACrBpB,CAAC,CAACzC,IAAI,GAAGyC,CAAC,CAACoB,mBAAmB;UACjC;UACD,OAAOpB,CAAC;QACpB,CAAO,CAAC;MACH;MAED,OAAOtG,IAAI;IACZ;IAED,MAAM3B,GAAGA,CAACgD,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAC9B,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,MAAMhB,IAAI,GAAI,IAAI,CAAClB,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAAC8F,QAAQ,CAAC3F,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CAClD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;MAEhD,IAAGG,IAAI,CAAC0H,mBAAmB,EAAC;QACxB1H,IAAI,CAAC6D,IAAI,GAAG7D,IAAI,CAAC0H,mBAAmB;MACvC;MAED,OAAO1H,IAAI;IACZ;IAED,MAAM4D,MAAMA,CAAEvC,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAClC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE7D,OAAO,IAAI,CAAClC,IAAI,CAACG,IAAI,CAACiC,WAAW,CAAC8F,QAAQ,CAAC3F,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CACnD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC3C;IAED,MAAMV,GAAGA,CAAEkC,UAAU,EAAEwC,IAAI,EAAqB;MAAA,IAAnB;QAACpB,KAAK;QAAEwB;MAAM,CAAC,GAAAjF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MAC7C,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAAC+C,IAAI,CAAC,EAAE,MAAMH,KAAK,yBAAyB,CAAC;MAExD,MAAM3C,MAAM,GAAGN,kBAAkB,CAAE;QAACwD;MAAM,CAAC,CAAC;MAE5C,MAAMZ,KAAK,GAAI;QAAEA,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAC5D,MAAM+C,WAAW,GAAG;QAAE,cAAc,EAAE;OAAoB;MAC1D,MAAMvE,OAAO,GAAI;QAAE,GAAG6D,KAAK;QAAG,GAAGU;MAAW,CAAC;MAE7C,OAAO,IAAI,CAACjF,IAAI,CAACK,GAAG,CAAC+B,WAAW,CAAC8F,QAAQ,CAAC3F,UAAU,CAAC,EAAGwC,IAAI,EAAG;QAAErE,OAAO;QAAEuB;MAAM,CAAE,CAAC,CAClEwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMR,MAAMA,CAACgC,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACjC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACO,MAAM,CAAC6B,WAAW,CAAC8F,QAAQ,CAAC3F,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CACrD+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMsE,SAASA,CAAC9C,UAAU,EAAgC;MAAA,IAA9B;QAACoB,KAAK;QAAEwB,MAAM;QAAEC;MAAU,CAAA,GAAAlF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MACvD,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAM3C,MAAM,GAAGN,kBAAkB,CAAE;QAACwD,MAAM;QAAEC;MAAU,CAAA,CAAC;MAEvD,MAAM1E,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAAC+F,gBAAgB,CAAC5F,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B,OAAO;QAAEuB;MAAM,CAAE,CAAC,CAC5EwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMuE,SAASA,CAAC/C,UAAU,EAAuB;MAAA,IAArB;QAACoB,KAAK;QAAEyB;MAAQ,CAAC,GAAAlF,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAC9C,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,MAAMD,MAAM,GAAGN,kBAAkB,CAAE;QAACyD;MAAQ,CAAC,CAAC;MAC9C,OAAO,IAAI,CAACpF,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAAC+F,gBAAgB,CAAC5F,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B,OAAO;QAAEuB;MAAM,CAAE,CAAC,CAC5EwC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMwE,SAASA,CAAChD,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACpC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAA+D,OAAA,EAAI,IAAI,CAAO,IAAIrG;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAAC+F,gBAAgB,CAAC5F,UAAU,EAAE,QAAQ,CAAC,EAAE;QAAE7B;OAAS,CAAC,CACpE+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;EACH;EAAC,IAAA8H,OAAA,oBAAAvF,OAAA;EAGM,MAAMwF,UAAU,SAAStJ,OAAO,CACvC;IAEEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAC;MAAC8D,0BAAA,OAAAqF,OAAA;MACf,IAAI,CAACpF,IAAI,GAAG,IAAI;MAChBC,qBAAA,CAAAmF,OAAA,MAAI,EAAUnJ,OAAO,CAACiE,KAAK;IAC5B;IAED,MAAMC,KAAKA,CAACrB,UAAU,EAAa;MAAA,IAAX;QAACoB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MAChC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MAEpE,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAqE,OAAA,EAAI,IAAI,CAAO,IAAI3G;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAACkG,gBAAgB,CAAC/F,UAAU,CAAC,EAAE;QAAE7B;OAAS,CAAC,CAC1D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMxB,GAAGA,CAACgD,UAAU,EAAE8F,MAAM,EAAc;MAAA,IAAZ;QAAC1E;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACtC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAACqG,MAAM,CAAC,EAAE,MAAMzD,KAAK,2BAA2B,CAAC;MAE5D,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAqE,OAAA,EAAI,IAAI,CAAO,IAAI3G;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACT,GAAG,CAAC6C,WAAW,CAACgG,YAAY,CAAC7F,UAAU,EAAE8F,MAAM,CAAC,EAAE;QAAE3H;OAAS,CAAC,CAC9D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAM+D,MAAMA,CAACvC,UAAU,EAAC8F,MAAM,EAAa;MAAA,IAAX;QAAC1E;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACxC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAACqG,MAAM,CAAC,EAAE,MAAMzD,KAAK,2BAA2B,CAAC;MAE5D,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAqE,OAAA,EAAI,IAAI,CAAO,IAAI3G;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACG,IAAI,CAACiC,WAAW,CAACgG,YAAY,CAAC7F,UAAU,EAAE8F,MAAM,CAAC,EAAE;QAAE3H;OAAS,CAAC,CAC/D+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMV,GAAGA,CAACkC,UAAU,EAAC8F,MAAM,EAAEtD,IAAI,EAAa;MAAA,IAAX;QAACpB;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,EAAE;MAC3C,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAACqG,MAAM,CAAC,EAAE,MAAMzD,KAAK,2BAA2B,CAAC;MAE5D,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAqE,OAAA,EAAI,IAAI,CAAO,IAAI3G;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACK,GAAG,CAAC+B,WAAW,CAACgG,YAAY,CAAC7F,UAAU,EAAC8F,MAAM,CAAC,EAAEtD,IAAI,EAAE;QAAErE;MAAO,CAAE,CAAC,CACnE+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;IAED,MAAMR,MAAMA,CAACgC,UAAU,EAAC8F,MAAM,EAAc;MAAA,IAAZ;QAAC1E;MAAK,CAAC,GAAAzD,SAAA,CAAA+D,MAAA,QAAA/D,SAAA,QAAAgC,SAAA,GAAAhC,SAAA,MAAC,CAAA,CAAE;MACxC,IAAG,CAAC8B,OAAO,CAACO,UAAU,CAAC,EAAE,MAAMqC,KAAK,+BAA+B,CAAC;MACpE,IAAG,CAAC5C,OAAO,CAACqG,MAAM,CAAC,EAAE,MAAMzD,KAAK,2BAA2B,CAAC;MAE5D,MAAMlE,OAAO,GAAI;QAAE6D,KAAK,EAAGZ,KAAK,IAAAa,qBAAA,CAAAqE,OAAA,EAAI,IAAI,CAAO,IAAI3G;OAAW;MAE9D,OAAO,IAAI,CAAClC,IAAI,CAACO,MAAM,CAAC6B,WAAW,CAACgG,YAAY,CAAC7F,UAAU,EAAC8F,MAAM,CAAC,EAAE;QAAE3H;OAAS,CAAC,CAChE+D,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxD,IAAI,CAAC,CACrByD,KAAK,CAAC5D,iBAAiB,CAAC;IAC1C;EACH;EC9Le,MAAMgI,YAAY,SAASvJ,OAAO,CACjD;IACEC,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,CAAC;MAEd,IAAI,CAACsJ,SAAS,GAAa,IAAIzF,cAAc,CAAC7D,OAAO,CAAC;MACtD,IAAI,CAACuJ,gBAAgB,GAAM,IAAIxD,qBAAqB,CAAC/F,OAAO,CAAC;MAC7D,IAAI,CAACwJ,MAAM,GAAgB,IAAIV,WAAW,CAAC9I,OAAO,CAAC;MACnD,IAAI,CAACyJ,KAAK,GAAiB,IAAIL,UAAU,CAACpJ,OAAO,CAAC;MAClD,IAAI,CAAC0J,WAAW,GAAW,IAAIzD,gBAAgB,CAACjG,OAAO,CAAC;IACzD;EACH;;"}