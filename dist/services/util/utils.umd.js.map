{"version":3,"file":"utils.umd.js","sources":["../../../src/services/util/utils.js"],"sourcesContent":["export const useLogger = ()=>{\r\n    return {\r\n        error\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction error(appError, userMessage){\r\n\r\n    if(![404, 401, 403].includes(appError?.status)){\r\n\r\n        try{\r\n            console.error(appError);\r\n            \r\n            const { ACCOUNTS_HOST_URL, TAG, COMMIT } = useRuntimeConfig().public;\r\n            const realmConfStore  = useRealmConfStore();\r\n            const realmConf = realmConfStore.realmConf; \r\n            //TODO: send error to server\r\n            const errorLog = {\r\n                stack : JSON.stringify(appError, Object.getOwnPropertyNames(appError)), \r\n                message: JSON.stringify(userMessage || appError?.message || 'unknown'),\r\n                url      : window.location.href,\r\n                userAgent: window.navigator.userAgent,\r\n                ver      : TAG||COMMIT,\r\n                timestamp: new Date(),\r\n                realm : realmConf.realm\r\n            }; \r\n\r\n            useAPIFetch('/error-logs', {method:'POST', body: errorLog});\r\n        }\r\n        catch(err){\r\n            console.error(err, 'error sending error log to server.')\r\n        }\r\n    }\r\n        \r\n    if(userMessage){\r\n        const $toast = useToast();\r\n        $toast.error(userMessage, {position:'top-right'}); \r\n    }\r\n}\r\n"],"names":["useLogger","error","appError","userMessage","includes","status","console","ACCOUNTS_HOST_URL","TAG","COMMIT","useRuntimeConfig","public","realmConfStore","useRealmConfStore","realmConf","errorLog","stack","JSON","stringify","Object","getOwnPropertyNames","message","url","window","location","href","userAgent","navigator","ver","timestamp","Date","realm","useAPIFetch","method","body","err","$toast","useToast","position"],"mappings":";;;;;EAAa,MAAAA,SAAS,GAAGA,CAAA,KAAI;IACzB,OAAO;MACHC;IACH,CAAA;EACL,CAAC;EAID,SAASA,KAAKA,CAACC,QAAQ,EAAEC,WAAW,EAAC;IAEjC,IAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,MAAM,CAAC,EAAC;MAE3C,IAAG;QACCC,OAAO,CAACL,KAAK,CAACC,QAAQ,CAAC;QAEvB,MAAM;UAAEK,iBAAiB;UAAEC,GAAG;UAAEC;QAAM,CAAE,GAAGC,gBAAgB,CAAE,CAAA,CAACC,MAAM;QACpE,MAAMC,cAAc,GAAIC,iBAAiB,EAAE;QAC3C,MAAMC,SAAS,GAAGF,cAAc,CAACE,SAAS;QACtD;QACY,MAAMC,QAAQ,GAAG;UACbC,KAAK,EAAGC,IAAI,CAACC,SAAS,CAAChB,QAAQ,EAAEiB,MAAM,CAACC,mBAAmB,CAAClB,QAAQ,CAAC,CAAC;UACtEmB,OAAO,EAAEJ,IAAI,CAACC,SAAS,CAACf,WAAW,KAAID,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmB,OAAO,KAAI,SAAS,CAAC;UACtEC,GAAG,EAAQC,MAAM,CAACC,QAAQ,CAACC,IAAI;UAC/BC,SAAS,EAAEH,MAAM,CAACI,SAAS,CAACD,SAAS;UACrCE,GAAG,EAAQpB,GAAG,IAAEC,MAAM;UACtBoB,SAAS,EAAE,IAAIC,IAAI,CAAE,CAAA;UACrBC,KAAK,EAAGjB,SAAS,CAACiB;QAClC,CAAa;QAEDC,WAAW,CAAC,aAAa,EAAE;UAACC,MAAM,EAAC,MAAM;UAAEC,IAAI,EAAEnB;QAAQ,CAAC,CAAC;MAC9D,CAAA,CACD,OAAMoB,GAAG,EAAC;QACN7B,OAAO,CAACL,KAAK,CAACkC,GAAG,EAAE,oCAAoC,CAAC;MAC3D;IACJ;IAED,IAAGhC,WAAW,EAAC;MACX,MAAMiC,MAAM,GAAGC,QAAQ,EAAE;MACzBD,MAAM,CAACnC,KAAK,CAACE,WAAW,EAAE;QAACmC,QAAQ,EAAC;MAAW,CAAC,CAAC;IACpD;EACL;;;;;"}